(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{473:function(s,t,a){"use strict";a.r(t);var n=a(62),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),a("h2",{attrs:{id:"认识-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识-docker"}},[s._v("#")]),s._v(" 认识 Docker")]),s._v(" "),a("p",[s._v("Docker 就是一种虚拟机技术，比传统虚拟机（如 vmware、virtualbox）更加简单、轻量。")]),s._v(" "),a("p",[s._v("基于 Docker，我们可以把开发、测试环境，一键部署到任何机器上。只要改机安装了 Docker。\n有了 Docker 就有了一切。")]),s._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://beelz.oss-cn-beijing.aliyuncs.com/9ccf5889b5c9a646f20464600-347274.png",alt:"基本概念"}})]),s._v(" "),a("h3",{attrs:{id:"基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[s._v("#")]),s._v(" 基本命令")]),s._v(" "),a("h4",{attrs:{id:"image-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#image-镜像"}},[s._v("#")]),s._v(" image 镜像")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("// 下载镜像\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 查看所有镜像\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n\n// 删除镜像\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 上传镜像 要先注册 hun.docker.com\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("如果 "),a("code",[s._v("docke images")]),s._v(" 出现 "),a("code",[s._v("REPOSITORY")]),s._v(" 是 "),a("code",[s._v("none")]),s._v(" 的情况，可以运行 "),a("code",[s._v("docker image prune")]),s._v(" 删除")]),s._v(" "),a("h4",{attrs:{id:"container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[s._v("#")]),s._v(" container")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("// 启动容器\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -p xxx:xxx -v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hostPath:containerPath -d --name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// -p 端口映射\n// -v 数据卷，文件映射\n// -d 后台运行\n// --name 定义容器名称\n\n// 查看所有容器, 加 -a 显示隐藏容器\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n// 停止所有容器\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 删除容器, 加 -f 是强制删除\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 查看容器信息\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 产看容器日志\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n// 进入容器控制台\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/sh\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动docker服务")]),s._v("\nservice docker start\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看docker镜像")]),s._v("\ndocker images\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看docker容器")]),s._v("\ndocker ps\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动docker")]),s._v("\ndocker start 容器名称\ndocker start 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 停止docker")]),s._v("\ndocker stop 容器名称\n")])])]),a("h2",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),a("p",[s._v("一个简单的配置文件，描述如何构建一个新的 image 镜像\n注意：必须是 "),a("code",[s._v("Dockerfile")]),s._v(" 这个文件名，必须在项目的根目录")]),s._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("div",{staticClass:"language-Dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:12 # 基于当前哪个镜像去构建")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app # 工作目录, 在执行RUN后面的shell命令前会先cd进WORKDIR后面的目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app  # 表示将当前文件夹（.表示当前文件夹，即Dockerfile所在文件夹）的所有文件拷贝到容器的/app文件夹中")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像时，一般用于做一些系统配置，安装必备的软件。可有多个 RUN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" xxx")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" xxx")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" xx")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMD 一定最后要运行阻塞控制台程序 确保 docker 容器持续运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SERVER_NAME")]),s._v(" && echo "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$AUTHOR_NAME")]),s._v(" && npm run dev && npx pm2 log")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" k1="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'XXX'")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" k2="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'XXX'")])]),s._v("\n")])])]),a("h3",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[s._v("#")]),s._v(" 构建")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后的 '.' 指 Dockerfile 在当前目录下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n")])])]),a("h2",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker-compose")]),s._v(" "),a("p",[s._v("基于 Docker 和 Docker-compose.\n通过一个配置文件，就可以让你的系统一键启动所有的运行环境：nodejs mysql mongodb redis")]),s._v(" "),a("p",[s._v("软件设计和开发，有单一职责原则。Docker 也一样，每个容器都只负责一个服务。\n如果开发环境需要多个服务（nodejs mysql mongodb redis）,就需要启动多个 Docker 容器。\n要连通这多个 Docker 容器，就需要多个 Docker-compose。")]),s._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("editor-server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# service name")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" . "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前目录")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Dockerfile "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于 Dockerfile 构建")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 依赖于当前 Dockerfile 创建出来的镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8081"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机通过 8081 访问")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("editor-redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# service name 不重复 可以自定义")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引用官网 redis 镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机，可以用 127.0.0.1:6378 即可连接容器中的数据库 `redis-cli -h 127.0.0.1 -p 6378`")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是，其他 docker 容器不能，因为此时 127.0.0.1 是 docker 容器本身，而不是宿主机")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 6378"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置时区")]),s._v("\n")])])]),a("h3",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动所有服务器 -d 后台启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up -d\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止所有服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" down\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看服务 只查看 docker-compose.yml 配置文件中的服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),a("h3",{attrs:{id:"连接-mysql-和-mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接-mysql-和-mongodb"}},[s._v("#")]),s._v(" 连接 Mysql 和 Mongodb")]),s._v(" "),a("p",[s._v("redis 无数据库，而 mysql 和 mongodb 需要创建数据库")]),s._v(" "),a("p",[s._v("redis 是缓存，无需数据持久化，而 mysql 和 mongodb 需要")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("editor-mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果容器报错 重启它")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("privileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 高权限 执行下面的 mysql/init")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("authentication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("plugin=mysql_native_password "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程访问")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 3305"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机可以使用 127.0.0.1:3305 即可连接容器中的数据库")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据持久化 地址映射 本地数据地址:容器数据地址")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.docker-volumes/mysql/log:/var/log/mysql'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录日志")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.docker-volumes/mysql/data:/var/lib/mysql'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据持久化")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.mysql/init:/docker-entrypoint-initdb.d'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化 sql")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_DATABASE=imooc_lego_course\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_ROOT_PASSWORD=xxx\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("editor-mongo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mongo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("mongo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果容器报错 重启它")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据持久化 地址映射 本地数据地址:容器数据地址")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.docker-volumes/mongo/data:/data/db'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MONGO_INITDB_DATABASE=imooc_lego_course\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 27016"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27017")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机可以使用 127.0.0.1:27016 即可连接容器中的数据库")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);